name: CI + update dist-utils split

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write  # needed to push with GITHUB_TOKEN

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Upgrade pip (optional)
        run: python -m pip install -U pip

      # Since Makefile installs deps itself, we drop this step.
      # - name: Install deps
      #   run: pip install -r requirements.txt

      - name: Run tests
        run: make test

  split-and-push:
    # Only after tests pass, and only for real pushes to main (i.e., PR merges or direct pushes)
    name: split src/utils -> dist-utils
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure we are on main (safety)
        run: |
          git checkout -f main
          git pull --ff-only

      - name: Compute split SHA (contents of src/utils)
        id: split
        shell: bash
        run: |
          set -euo pipefail
          PREFIX="src/utils"
          SPLIT_SHA=$(git subtree split -P "$PREFIX")
          echo "SPLIT_SHA=$SPLIT_SHA" >> "$GITHUB_OUTPUT"

      - name: Push to dist-utils (only if changed)
        shell: bash
        run: |
          set -euo pipefail
          TARGET_BRANCH="dist-utils"
          REMOTE_SHA=$(git ls-remote origin "refs/heads/$TARGET_BRANCH" | cut -f1 || true)
          echo "Remote tip: ${REMOTE_SHA:-<none>}"
          echo "New split:  ${{ steps.split.outputs.SPLIT_SHA }}"
          if [ "${{ steps.split.outputs.SPLIT_SHA }}" = "$REMOTE_SHA" ]; then
            echo "No changes to push."
            exit 0
          fi
          git push origin "${{ steps.split.outputs.SPLIT_SHA }}:refs/heads/$TARGET_BRANCH" --force